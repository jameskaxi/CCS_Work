ZERODPH				.set	0x39B4484B
ZERODPL				.set	0xFEEBC2A0

					.global Mat_invc_cplx_d

Mat_invc_cplx_d: .cproc	pInPut,n,is,js,frow,fcol
				.no_mdep
				.reg u,v,re,d1_r,d1_m,d1,d2,d3,d4,uu,vv
                .reg cp1_rh,cp1_rl,cp2_rh,cp2_rl
                .reg cp1_ih,cp1_il,cp2_ih,cp2_il
                .reg cp2_m,cp2_r,cp1_m,cp1_r,cp3_m,cp3_r,cp4_m,cp4_r
                .reg cp5_m,cp5_r,cp6_m,cp6_r,cp7_m,cp7_r,cp8_m,cp8_r
                .reg head1,head2,head4,head3,head5,ii,jj
                .reg n1,n2,n3,nn,n4,n5,n6,n7,n8,na,nna
                .reg r,z,q,p,aa,pn,qn,rr,r1,r2,r11,r12,mm,q1,rret
                .reg ling1,ling2

                 mvkl	ZERODPH, ling1
                 mvkh	ZERODPH, ling1
                 mvkl	ZERODPL, ling2
				 mvkh	ZERODPL, ling2
                 zero d2
                 mv    d2,d4
                 zero n1
                 mvk  0x8,aa
                 mvk  0x2,rr
                 intdp rr,r12:r11;2
                 add n,n,nn;2n
                 sub n,1,na;n-1
                 add na,na,nna;2n-2

                 mv    pInPut,q

oloop            mv    d2,d1
				 mv    d2,d3
                 add   n1,d2,n2
Iloop            add   n1,n1,n3
                 MPY   nn,n2,u
loop2:
                 add   u,n3,v
                 mpy   aa,v,head1
                 add   q,head1,p
                 lddw  *p++,cp1_rh:cp1_rl
                 lddw  *p++,cp1_ih:cp1_il
                 fmpydp cp1_rh:cp1_rl,cp1_rh:cp1_rl,cp2_rh:cp2_rl
                 fmpydp cp1_ih:cp1_il,cp1_ih:cp1_il,cp2_ih:cp2_il
                 fadddp  cp2_rh:cp2_rl, cp2_ih:cp2_il,cp2_m:cp2_r
                 CMPGTdP  cp2_m:cp2_r,d1:d3,r
            [r]  dmv cp2_m,cp2_r,d1:d3
            [r]  stw n3,*js[n1]
            [r]  stw n2,*is[n1]
                 sub   nna,n3,n4
                 CMPGT d2,n4,mm
            [mm] sub   n4,n4,n4
            [n4] add   n3,2,n3
			[n4]  b	   loop2
                 sub   na,n2,n5
            [n5] add   n2,1,n2
			[n5]  b	   Iloop

            absdp  d1:d3,cp1_m:cp1_r
            CMPLTDP cp1_m:cp1_r,ling1:ling2,z
            [z]  B   ENDFUNCTION

			ldw   *is[n1],ii
			mpy    ii,nn,head2
			CMPEQ  ii,n1,n3
			[n3]  B   for1
			mpy    n1,nn,head1
			zero n4

loop3
                add   head1,n4,uu
                mpy   aa,uu,head3
                add   q,head3,qn

                lddw  *qn++,cp1_rh:cp1_rl
                lddw  *qn,cp1_ih:cp1_il

                add   head2,n4,vv
                mpy   aa,vv,head4
                add   q,head4,p

                lddw  *p++,cp2_rh:cp2_rl
                lddw  *p,cp2_ih:cp2_il

                stdw  cp1_ih:cp1_il,*p--
                stdw  cp1_rh:cp1_rl,*p

                stdw  cp2_ih:cp2_il,*qn--
                stdw  cp2_rh:cp2_rl,*qn

                sub   nna,n4,n2
           [n2] add   n4,2,n4
		   [n2]  b	   loop3
for1:
	        zero n4
	        mpy n1,2,n5
	        ldw   *js[n1],jj
            CMPEQ jj,n5,n3
            [n3]  B   for2
loop4
                mpy   n4,nn,head1
                add   head1,n5,u
                add   head1,jj,v
                mpy   aa,u,head2
                add   q,head2,qn

                lddw  *qn++,cp1_rh:cp1_rl
                lddw  *qn,cp1_ih:cp1_il

                mpy   aa,v,head3
                add   q,head3,p

                lddw  *p++,cp2_rh:cp2_rl
                lddw  *p,cp2_ih:cp2_il

                stdw  cp1_ih:cp1_il,*p--
                stdw  cp1_rh:cp1_rl,*p

                stdw  cp2_ih:cp2_il,*qn--
                stdw  cp2_rh:cp2_rl,*qn

                sub   na,n4,n2

           [n2] add   n4,1,n4
           ;[n3] zero  n2
		   [n2]  b	   loop4

for2:
                mpy   n1,nn,head1
                add   head1,n5,u
                mpy   aa,u,head2
                add   q,head2,q1
                lddw  *q1,r2:r1

                RCPdP   d1:d3, cp1_ih:cp1_il   ;除法实现上有误差需要提高精度
                fmpydp  cp1_ih:cp1_il, d1:d3,d1_m:d1_r
                fmpydp  r2:r1,cp1_ih:cp1_il,r2:r1
                fsubdp  r12:r11,d1_m:d1_r,cp1_ih:cp1_il

                fmpydp  cp1_ih:cp1_il, d1_m:d1_r,d1_m:d1_r
                fmpydp  r2:r1,cp1_ih:cp1_il,r2:r1
                fsubdp  r12:r11,d1_m:d1_r,cp1_ih:cp1_il

                fmpydp  cp1_ih:cp1_il, d1_m:d1_r,d1_m:d1_r
                fmpydp  r2:r1,cp1_ih:cp1_il,r2:r1
                fsubdp  r12:r11,d1_m:d1_r,cp1_ih:cp1_il
                fmpydp  r2:r1,cp1_ih:cp1_il,cp1_m:cp1_r

				stdw  cp1_m:cp1_r,*q1++  ;实部


                lddw  *q1,r2:r1


                RCPdP   d1:d3, cp1_ih:cp1_il   ;除法实现上有误差需要提高精度
                fmpydp  cp1_ih:cp1_il, d1:d3,d1_m:d1_r
                fmpydp  r2:r1,cp1_ih:cp1_il,r2:r1
                fsubdp  r12:r11,d1_m:d1_r,cp1_ih:cp1_il

                fmpydp  cp1_ih:cp1_il, d1_m:d1_r,d1_m:d1_r
                fmpydp  r2:r1,cp1_ih:cp1_il,r2:r1
                fsubdp  r12:r11,d1_m:d1_r,cp1_ih:cp1_il

                fmpydp  cp1_ih:cp1_il, d1_m:d1_r,d1_m:d1_r
                fmpydp  r2:r1,cp1_ih:cp1_il,r2:r1
                fsubdp  r12:r11,d1_m:d1_r,cp1_ih:cp1_il
                fmpydp  r2:r1,cp1_ih:cp1_il,cp2_m:cp2_r

                fsubdp d2:d4,cp2_m:cp2_r,cp2_m:cp2_r
                stdw  cp2_m:cp2_r,*q1--  ;虚步

               zero n4
               mpy   n1,nn,head1
loop5:
                add   head1,n4,u
                mpy   aa,u,head2
                add   q,head2,qn
                lddw  *qn++,cp1_rh:cp1_rl
                lddw  *qn,cp1_ih:cp1_il
                fmpydp cp1_rh:cp1_rl,cp1_m:cp1_r,cp3_m:cp3_r;ac
                fmpydp cp1_rh:cp1_rl,cp2_m:cp2_r,cp4_m:cp4_r;ad
                fmpydp cp1_ih:cp1_il,cp1_m:cp1_r,cp5_m:cp5_r;bc
                fmpydp cp1_ih:cp1_il,cp2_m:cp2_r,cp6_m:cp6_r;bd
                fadddp cp4_m:cp4_r,cp5_m:cp5_r,cp1_ih:cp1_il
                fsubdp cp3_m:cp3_r,cp6_m:cp6_r,cp1_rh:cp1_rl

				stdw  cp1_ih:cp1_il,*qn--
				stdw  cp1_rh:cp1_rl,*qn

                sub   nna,n4,n2

           [n2] add   n4,2,n4
		   [n2]  b	   loop5

               stdw  cp1_m:cp1_r,*q1++
               stdw  cp2_m:cp2_r,*q1--

	            mv    n,n4
                mpy   n1,nn,head1
                mpy   aa,head1,head2
                add   q,head2,pn
                mv    frow,qn

loopl:          lddw  *pn++,cp3_m:cp3_r
				lddw  *pn++,cp4_m:cp4_r

				stdw  cp3_m:cp3_r,*qn++
                stdw  cp4_m:cp4_r,*qn++

                sub   n4,1,n4
		    [n4]  b	   loopl


	            mv    n,n4
	            mpy   aa,n5,head1
                add   q,head1,pn
                mpy   aa,nn,head2
                mv    fcol,qn

loopm:          lddw  *pn++,cp3_m:cp3_r
				lddw  *pn--,cp4_m:cp4_r
				stdw  cp3_m:cp3_r,*qn++
                stdw  cp4_m:cp4_r,*qn++
                add   pn,head2,pn
                sub   n4,1,n4
		    [n4]  b	   loopm



                 zero n4
	            mpy   n1,nn,head1
	            mv    fcol,p
loop6:
                mpy   n4,nn,head2
               lddw  *p++,cp1_rh:cp1_rl
               lddw  *p++,cp1_ih:cp1_il
               mv    frow,qn
                zero n2
loop7:

                lddw  *qn++,cp2_rh:cp2_rl
                lddw  *qn++,cp2_ih:cp2_il

                add   head2,n2,re
                mpy   aa,re,head5
                add   q,head5,pn

                lddw  *pn++,cp7_m:cp7_r
                lddw  *pn,cp8_m:cp8_r

                fmpydp cp1_rh:cp1_rl,cp2_rh:cp2_rl,cp3_m:cp3_r;ac
                fmpydp cp1_rh:cp1_rl,cp2_ih:cp2_il,cp4_m:cp4_r;ad
                fmpydp cp1_ih:cp1_il,cp2_rh:cp2_rl,cp5_m:cp5_r;bc
                fmpydp cp1_ih:cp1_il,cp2_ih:cp2_il,cp6_m:cp6_r;bd
                fadddp cp4_m:cp4_r,cp5_m:cp5_r,cp2_ih:cp2_il
                fsubdp cp3_m:cp3_r,cp6_m:cp6_r,cp2_rh:cp2_rl



				fsubdp  cp7_m:cp7_r,cp2_rh:cp2_rl,cp2_rh:cp2_rl
				fsubdp  cp8_m:cp8_r,cp2_ih:cp2_il,cp2_ih:cp2_il

				stdw    cp2_ih:cp2_il,*pn--
				stdw    cp2_rh:cp2_rl,*pn

           sub   nna,n2,n6
           [n6] add   n2,2,n2
		   [n6]  b	   loop7

	        sub   na,n4,n7
           [n7] add   n4,1,n4
		   [n7]  b	   loop6


	            mv    n,n4
                mpy   n1,nn,head1
                mpy   aa,head1,head2
                add   q,head2,pn
                mv    frow,qn

loopk:          lddw  *qn++,cp3_m:cp3_r
				lddw  *qn++,cp4_m:cp4_r
                stdw  cp3_m:cp3_r,*pn++
                stdw  cp4_m:cp4_r,*pn++
                sub   n4,1,n4
		    [n4]  b	   loopk


	            mv    n,n4
	            mpy   aa,n5,head1
                add   q,head1,pn
                mpy   aa,nn,head2
                mv    fcol,qn

loopb:          lddw  *qn++,cp3_m:cp3_r
				lddw  *qn++,cp4_m:cp4_r
				stdw  cp3_m:cp3_r,*pn++
                stdw  cp4_m:cp4_r,*pn--
                add   pn,head2,pn
                sub   n4,1,n4
		    [n4]  b	   loopb


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	            zero n4
loop8:

                mpy   n4,nn,head2
                add   head2,n5,u
                mpy   aa,u,head4
                add   q,head4,qn


                lddw  *qn++,cp1_rh:cp1_rl
                lddw  *qn,cp1_ih:cp1_il
                fmpydp cp1_rh:cp1_rl,cp1_m:cp1_r,cp3_m:cp3_r;ac
                fmpydp cp1_rh:cp1_rl,cp2_m:cp2_r,cp4_m:cp4_r;ad
                fmpydp cp1_ih:cp1_il,cp1_m:cp1_r,cp5_m:cp5_r;bc
                fmpydp cp1_ih:cp1_il,cp2_m:cp2_r,cp6_m:cp6_r;bd
                fadddp cp4_m:cp4_r,cp5_m:cp5_r,cp1_ih:cp1_il
                ;fsubdp cp3_m:cp3_r,cp6_m:cp6_r,cp1_rh:cp1_rl
                fsubdp cp6_m:cp6_r,cp3_m:cp3_r,cp1_rh:cp1_rl
                fsubdp d2:d4,cp1_ih:cp1_il,cp1_ih:cp1_il

				stdw  cp1_ih:cp1_il,*qn--
				stdw  cp1_rh:cp1_rl,*qn

            sub   na,n4,n2
           [n2] add   n4,1,n4
		   [n2]  b	   loop8

               stdw  cp1_m:cp1_r,*q1++
               stdw  cp2_m:cp2_r,*q1--

            sub   na,n1,n8
           [n8] add   n1,1,n1
		   [n8]  b	   oloop

                sub  n,1,n1


loop9:
                mpy  n1,2,n2
                ldw *js[n1],jj
                CMPEQ jj,n2,n3
                [n3]  B   for7
			    mpy  jj,n,head2
			    mpy  n1,nn,head1
                zero n4
loop10:
                add   head1,n4,u
                mpy   aa,u,head4
                add   q,head4,qn
                lddw  *qn++,cp1_rh:cp1_rl
                lddw  *qn,cp1_ih:cp1_il

                add   head2,n4,v
                mpy   aa,v,head4
                add   q,head4,pn

                lddw  *pn++,cp2_rh:cp2_rl
                lddw  *pn,cp2_ih:cp2_il

                stdw   cp1_ih:cp1_il,*pn--
                stdw   cp1_rh:cp1_rl,*pn
                stdw   cp2_ih:cp2_il,*qn--
                stdw   cp2_rh:cp2_rl,*qn

                sub   nna,n4,n2
           [n2] add   n4,2,n4
		   [n2]  b	   loop10

for7:
                ldw *is[n1],ii
	            CMPEQ ii,n1,n3
                [n3]  B   for8
		        add  ii,ii,head2
		        mpy  n1,2,n2
                zero n5
loop11:
                mpy   n5,nn,head1
                add   head1,n2,u
                mpy   aa,u,head4
                add   q,head4,qn
                lddw  *qn++,cp1_rh:cp1_rl
                lddw  *qn,cp1_ih:cp1_il

                add   head1,head2,v
                mpy   aa,v,head4
                add   q,head4,pn
                lddw  *pn++,cp2_rh:cp2_rl
                lddw  *pn,cp2_ih:cp2_il

                stdw   cp1_ih:cp1_il,*pn--
                stdw   cp1_rh:cp1_rl,*pn
                stdw   cp2_ih:cp2_il,*qn--
                stdw   cp2_rh:cp2_rl,*qn
                sub   na,n5,n6
           [n6] add   n5,1,n5
		   [n6]  b	   loop11

for8:		    sub   n1,1,n1
                add   n1,1,n6
		   [n6]  b	   loop9



ENDFUNCTION:

		 [z]  sub z,1,rret
		 [!z] add z,1,rret
           .return rret
           .endproc

